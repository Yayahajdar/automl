name: CI
 
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
 
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Python 
        uses: actions/setup-python@v5 
        with: 
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps (lint only) 
        run: |
          python -m pip install --upgrade pip
          pip install flake8 bandit 
      - name: Run flake8 
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics 
      - name: Run bandit 
        run: bandit -r csv_analyzer csv_processor 
 
  tests: 
    runs-on: ubuntu-latest 
    needs: lint 
    steps: 
      - uses: actions/checkout@v4 
        with:
          fetch-depth: 0
      - name: Setup Python 
        uses: actions/setup-python@v5 
        with: 
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies 
        run: | 
          python -m pip install --upgrade pip
          pip install -r requirements.txt 
          pip install pytest-cov 
      - name: Django migrations
        run: python manage.py migrate --noinput
      - name: Run tests 
        run: pytest --cov 
 
  docker-local:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image (local only)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: dockerfile.txt
          push: false
          load: true
          tags: local/csv-analyzer:${{ github.sha }}
      - name: Run container
        run: |
          docker run -d --name app -p 8000:8000 local/csv-analyzer:${{ github.sha }}
      - name: Smoke test HTTP
        run: |
          for i in {1..30}; do
            if curl -fsS http://localhost:8000/ > /dev/null; then
              echo "App is up"; exit 0
            fi
            echo "Waiting for app... ($i)"; sleep 2
          done
          echo "App failed to respond" >&2
          docker logs app || true
          exit 1
      - name: Cleanup
        if: always()
        run: |
          docker rm -f app || true
<<<<<<< HEAD
          docker image rm local/csv-analyzer:${{ github.sha }} || true
=======
          docker image rm local/csv-analyzer:${{ github.sha }} || true
>>>>>>> 06c38a5 (CI: build & test docker image locally in Actions)
