# Use a non-slim base image for ARM compatibility
FROM python:3.11-bullseye

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Set working directory
WORKDIR /app

# Install system dependencies for ARM compilation
RUN apt-get update && \
    apt-get install -y \
    gcc \
    python3-dev \
    build-essential \
    libpq-dev \
    # ARM-specific headers and tools
    linux-headers-arm64 \
    libc6-dev-arm64-cross \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip and enforce binary wheel usage
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --only-binary=:all: -r requirements.txt

# Copy application code
COPY . .

# Collect static files
RUN python manage.py collectstatic --noinput

# Start Gunicorn
CMD ["gunicorn", "csv_analyzer.wsgi:application", "--bind", "0.0.0.0:8000"]